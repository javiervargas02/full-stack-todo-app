{"ast":null,"code":"import axios from \"axios\";\nexport function setUser(user) {\n  localStorage.setItem(\"user\", JSON.stringify(user));\n}\nexport function getUser() {\n  return JSON.parse(localStorage.getItem(\"user\"));\n}\nexport function deleteUser() {\n  localStorage.removeItem(\"user\");\n}\nexport const API_URL = \"http://127.0.0.1:8000\";\nexport function initAxiosInterceptors() {\n  const user = getUser();\n  axios.interceptors.request.use(config => {\n    if (user && user.access_token && user.refresh_token && user.user) {\n      config.headers.Authorization = `Bearer ${user.access_token}`;\n    }\n    return config;\n  });\n  axios.interceptors.response.use(response => response, async err => {\n    if (err.response && err.response.status === 401) {\n      try {\n        const temp_user = getUser();\n        const response = await fetch(`${API_CONFIG.apiUrl}/users/refresh_token`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(temp_user.refresh_token)\n        });\n        if (!response.ok) {\n          throw err;\n        }\n        const data = await response.json();\n        setUser({\n          ...temp_user,\n          access_token: data.access_token,\n          refresh_token: data.refresh_token\n        });\n      } catch (refresh_err) {\n        if (refresh_err.response && refresh_err.response.status === 401) {\n          deleteUser();\n          localStorage.setItem(\"invalid_credentials\", \"Your session has expired, please login again\");\n          window.location.reload();\n        } else {\n          return err;\n        }\n      }\n    } else {\n      return err;\n    }\n  });\n}","map":{"version":3,"names":["axios","setUser","user","localStorage","setItem","JSON","stringify","getUser","parse","getItem","deleteUser","removeItem","API_URL","initAxiosInterceptors","interceptors","request","use","config","access_token","refresh_token","headers","Authorization","response","err","status","temp_user","fetch","API_CONFIG","apiUrl","method","body","ok","data","json","refresh_err","window","location","reload"],"sources":["/Users/javivargas04/Downloads/FastAPI Course/todo-frontend/src/utils/helpers.js"],"sourcesContent":["import axios from \"axios\";\n\nexport function setUser(user) {\n  localStorage.setItem(\"user\", JSON.stringify(user));\n}\n\nexport function getUser() {\n  return JSON.parse(localStorage.getItem(\"user\"));\n}\n\nexport function deleteUser() {\n  localStorage.removeItem(\"user\");\n}\n\nexport const API_URL = \"http://127.0.0.1:8000\";\n\nexport function initAxiosInterceptors() {\n  const user = getUser();\n  axios.interceptors.request.use((config) => {\n    if (user && user.access_token && user.refresh_token && user.user) {\n      config.headers.Authorization = `Bearer ${user.access_token}`;\n    }\n\n    return config;\n  });\n\n  axios.interceptors.response.use(\n    (response) => response,\n    async (err) => {\n      if (err.response && err.response.status === 401) {\n        try {\n          const temp_user = getUser();\n          const response = await fetch(\n            `${API_CONFIG.apiUrl}/users/refresh_token`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify(temp_user.refresh_token),\n            }\n          );\n          if (!response.ok) {\n            throw err;\n          }\n          const data = await response.json();\n          setUser({\n            ...temp_user,\n            access_token: data.access_token,\n            refresh_token: data.refresh_token,\n          });\n        } catch (refresh_err) {\n          if (refresh_err.response && refresh_err.response.status === 401) {\n            deleteUser();\n            localStorage.setItem(\n              \"invalid_credentials\",\n              \"Your session has expired, please login again\"\n            );\n            window.location.reload();\n          } else {\n            return err;\n          }\n        }\n      } else {\n        return err;\n      }\n    }\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,OAAOA,CAACC,IAAI,EAAE;EAC5BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;AACpD;AAEA,OAAO,SAASK,OAAOA,CAAA,EAAG;EACxB,OAAOF,IAAI,CAACG,KAAK,CAACL,YAAY,CAACM,OAAO,CAAC,MAAM,CAAC,CAAC;AACjD;AAEA,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3BP,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;AACjC;AAEA,OAAO,MAAMC,OAAO,GAAG,uBAAuB;AAE9C,OAAO,SAASC,qBAAqBA,CAAA,EAAG;EACtC,MAAMX,IAAI,GAAGK,OAAO,CAAC,CAAC;EACtBP,KAAK,CAACc,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;IACzC,IAAIf,IAAI,IAAIA,IAAI,CAACgB,YAAY,IAAIhB,IAAI,CAACiB,aAAa,IAAIjB,IAAI,CAACA,IAAI,EAAE;MAChEe,MAAM,CAACG,OAAO,CAACC,aAAa,GAAI,UAASnB,IAAI,CAACgB,YAAa,EAAC;IAC9D;IAEA,OAAOD,MAAM;EACf,CAAC,CAAC;EAEFjB,KAAK,CAACc,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC5BM,QAAQ,IAAKA,QAAQ,EACtB,MAAOC,GAAG,IAAK;IACb,IAAIA,GAAG,CAACD,QAAQ,IAAIC,GAAG,CAACD,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC/C,IAAI;QACF,MAAMC,SAAS,GAAGlB,OAAO,CAAC,CAAC;QAC3B,MAAMe,QAAQ,GAAG,MAAMI,KAAK,CACzB,GAAEC,UAAU,CAACC,MAAO,sBAAqB,EAC1C;UACEC,MAAM,EAAE,MAAM;UACdT,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDU,IAAI,EAAEzB,IAAI,CAACC,SAAS,CAACmB,SAAS,CAACN,aAAa;QAC9C,CACF,CAAC;QACD,IAAI,CAACG,QAAQ,CAACS,EAAE,EAAE;UAChB,MAAMR,GAAG;QACX;QACA,MAAMS,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClChC,OAAO,CAAC;UACN,GAAGwB,SAAS;UACZP,YAAY,EAAEc,IAAI,CAACd,YAAY;UAC/BC,aAAa,EAAEa,IAAI,CAACb;QACtB,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOe,WAAW,EAAE;QACpB,IAAIA,WAAW,CAACZ,QAAQ,IAAIY,WAAW,CAACZ,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC/Dd,UAAU,CAAC,CAAC;UACZP,YAAY,CAACC,OAAO,CAClB,qBAAqB,EACrB,8CACF,CAAC;UACD+B,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;QAC1B,CAAC,MAAM;UACL,OAAOd,GAAG;QACZ;MACF;IACF,CAAC,MAAM;MACL,OAAOA,GAAG;IACZ;EACF,CACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}